Patrón de merge

const n (cantidad de detalles); valorAlto (tope de lectura);

type

maestro = file of registroMaestro;
detalle = file of registroDetalle;

vectorDetalles = array [1..n] of detalle;
vectorRegistros = array [1..n] of registroDetalle;

procedure leer (variables por referencia: archivoDetalle (tipo detalle), dato (registroDetalle))

  procedure leer (var archivoDetalle:detalle; var dato:pedido);
  begin
    if (not eof (archivoDetalle)) then read (archivoDetalle,dato)
    else dato.codigoProducto := valorAlto;
  end;

procedure mínimo (variables por referencia: vD (vectorDetalles), vR(vectorRegistros), min (registroDetalle))
variables locales del proceso: i e indiceMin (enteros)
inicializar el índice mínimo,
el mínimo toma el valor alto en el campo del registro por el que esta ordenado,
después hago un for de 1 a n de *los registros*
--- si el vector de registros en una posición i en el campo por el que esta ordenado es menor a mínimo en ese  mismo campo entonces 
-------el mínimo para a ser el vector de registros en la posición i,
-------el índice mínimo también pasa a ser i
--- si el índice mínimo NO llegó al tope (valor Alto) entonces avanzo con el proceso leer en vector de DETALLES en la posición de índice mínimo y también en el vector de REGISTROS en la posición de índice mínimo

procedure actualizar el maestro (variables por referencia: archivo MAESTRO, vectores de REGISTROS y DETALLES)
variables locales: mínimo que va a tomar el valor del registro del detalle, i que es entero, una variable r (por ejemplo) que tome el tipo del registro del maestro, y también probablemente hay un "código actual" o un campo x actual por el cual esta ordenado el maestro y el detalle para el while básicamente.
-- otras variables locales dependiendo del ejercicio --

siempre reset del archivo maestro
y un for de 1 a n de los detalles para hacer reset de ellos y llamo al proceso leer (vD[i], vR[i]);

y también antes de ingresar al primer while llamo al proceso mínimo(vD,vR,min);

primero tengo que leer hasta que el campo por el que esta ordenado el detalle llega al tope (valorAlto)
  xActual:= min.xActual
  -- instanciar variables --
  ----- el segundo while generalmente es el corte de control que lee hasta que cambie de por ejemplo código o del campo por el que este organizado adentro del detalle -----
----- leo por primera vez el maestro para que en la variable local r tenga guardado el primer dato del archivo maestro y así en el while con el que recorro el maestro voy a poder buscar en el maestro lo que necesito. No necesito leer hasta el end of file del maestro porque si estaba en el detalle, esta en el maestro.
si lo encuentro paro de leer (salgo del while) y hago que tengo que hacer en la posición del maestro en la que estoy.

después de que cierren todos estos while cierro los archivos:
for de 1 down to n de los detalles close (vD[i]); luego un close (archivoMaestro).

Para el programa principal: assign al archivo maestro y un for para el assign para los detalles assign (vD[i],'detalle.dat').